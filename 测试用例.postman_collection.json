{
	"info": {
		"_postman_id": "9a1a027e-de3a-4b75-8949-2e5a75928513",
		"name": "个人博客",
		"description": "111",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18658453"
	},
	"item": [
		{
			"name": "1、注册",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 400\", function () {",
							"    pm.expect(pm.response.status).to.equal(400);",
							"});",
							"",
							"",
							"pm.test(\"Response contains an error field\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.property('error');",
							"});",
							"",
							"",
							"pm.test(\"Error field must be a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.error).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Error field should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "zxx",
							"type": "text"
						},
						{
							"key": "password",
							"value": "147258",
							"type": "text"
						},
						{
							"key": "email",
							"value": "88512@qq.com",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost:8080/register",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "2、登录",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has required fields\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.all.keys('message', 'token');",
							"});",
							"",
							"",
							"pm.test(\"Token must be a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.token).to.exist.and.to.be.a('string').and.to.have.lengthOf.above(0, \"Token should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"zxx\",\r\n    \"password\":\"147258\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/login",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "3、加文章",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {",
							"    pm.expect(pm.response.code).to.eql(201);",
							"});",
							"",
							"",
							"pm.test(\"Response has required fields\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.all.keys('content', 'id', 'title', 'user_id');",
							"});",
							"",
							"",
							"pm.test(\"Id must be a positive integer\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.id).to.be.a('number').and.to.be.greaterThan(0);",
							"});",
							"",
							"",
							"pm.test(\"Content and Title must be non-empty strings\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    ",
							"    pm.expect(responseData.content).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Content should not be empty\");",
							"    pm.expect(responseData.title).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Title should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTMxMDY2MTIsImlhdCI6MTc1MzAyMDIxMiwidXNlcl9pZCI6MX0.wj56nQNAOTXpgFsDMWfelffrqZs4TJ5TBnEAldwfTs4",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\":\"你有多少钱啊\",\r\n    \"content\":\"我现在有一万，以后会有三千万\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/createPost",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"createPost"
					]
				}
			},
			"response": []
		},
		{
			"name": "4、根据ID获取文章",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Validate the presence of the author object and its required fields\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.property('author').that.is.an('object');",
							"    pm.expect(responseData.author).to.have.all.keys('id', 'username');",
							"    pm.expect(responseData.author.id).to.be.a('number');",
							"    pm.expect(responseData.author.username).to.be.a('string');",
							"});",
							"",
							"",
							"pm.test(\"Comments is an array and its structure is valid\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData.comments).to.be.an('array');",
							"    responseData.comments.forEach(comment => {",
							"        pm.expect(comment).to.be.an('object');",
							"        pm.expect(comment).to.have.all.keys('content', 'created_at', 'id', 'user');",
							"        pm.expect(comment.content).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Comment content should not be empty\");",
							"        pm.expect(comment.created_at).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Created at should not be empty\");",
							"        pm.expect(comment.id).to.be.a('number');",
							"        pm.expect(comment.user).to.be.an('object');",
							"        pm.expect(comment.user).to.have.all.keys('id', 'username');",
							"        pm.expect(comment.user.id).to.be.a('number');",
							"        pm.expect(comment.user.username).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Username should not be empty\");",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Created_at is in a valid date format\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(new Date(responseData.created_at).getTime()).to.not.be.NaN;",
							"});",
							"",
							"",
							"pm.test(\"Title and Content should be non-empty strings\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.title).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Title should not be empty\");",
							"    pm.expect(responseData.content).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Content should not be empty\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTMxMDY2MTIsImlhdCI6MTc1MzAyMDIxMiwidXNlcl9pZCI6MX0.wj56nQNAOTXpgFsDMWfelffrqZs4TJ5TBnEAldwfTs4",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/getPostById/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"getPostById",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "5、根据ID更新文章",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has a message field\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.property('message');",
							"});",
							"",
							"",
							"pm.test(\"The message must be a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.message).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Response Content-Type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.include(\"application/json\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTMxMDY2MTIsImlhdCI6MTc1MzAyMDIxMiwidXNlcl9pZCI6MX0.wj56nQNAOTXpgFsDMWfelffrqZs4TJ5TBnEAldwfTs4",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\":\"update论web3找工作有多难\",\r\n    \"content\":\"update你想想就知道了\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/UpdateById/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"UpdateById",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "6、根据ID删除文章",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.status).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response should contain the required field 'message'\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.property('message');",
							"});",
							"",
							"",
							"pm.test(\"The message must be a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.message).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql(\"application/json\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTMxMDY2MTIsImlhdCI6MTc1MzAyMDIxMiwidXNlcl9pZCI6MX0.wj56nQNAOTXpgFsDMWfelffrqZs4TJ5TBnEAldwfTs4",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/DeleteById/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"DeleteById",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "7、获取文章列表",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.status).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has required fields\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.all.keys('data', 'page', 'size', 'total');",
							"});",
							"",
							"",
							"pm.test(\"Validate the structure of the post object within the data array\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.data).to.be.an('array');",
							"",
							"    responseData.data.forEach(function(post) {",
							"        pm.expect(post).to.be.an('object');",
							"        pm.expect(post).to.have.all.keys('author', 'content', 'created_at', 'id', 'title', 'user_id');",
							"",
							"        pm.expect(post.author).to.be.an('object');",
							"        pm.expect(post.author).to.have.all.keys('id', 'username');",
							"        pm.expect(post.author.id).to.be.a('number');",
							"        pm.expect(post.author.username).to.be.a('string');",
							"",
							"        pm.expect(post.content).to.be.a('string');",
							"        pm.expect(post.created_at).to.be.a('string');",
							"        pm.expect(post.id).to.be.a('number');",
							"        pm.expect(post.title).to.be.a('string');",
							"        pm.expect(post.user_id).to.be.a('number');",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Username is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.data).to.be.an('array').that.is.not.empty;",
							"",
							"    responseData.data.forEach(post => {",
							"        pm.expect(post.author).to.be.an('object');",
							"        pm.expect(post.author.username).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Username should not be empty\");",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Created_at is in a valid date-time format\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    responseData.data.forEach(post => {",
							"        pm.expect(post).to.have.property('created_at');",
							"        pm.expect(post.created_at).to.match(/^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d{3})?Z$/, \"Created_at is not in a valid date-time format\");",
							"    });",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTMxMDY2MTIsImlhdCI6MTc1MzAyMDIxMiwidXNlcl9pZCI6MX0.wj56nQNAOTXpgFsDMWfelffrqZs4TJ5TBnEAldwfTs4",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"zxx\",\r\n    \"password\":\"147258\"\r\n}"
				},
				"url": {
					"raw": "localhost:8080/listPosts",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"listPosts"
					]
				}
			},
			"response": []
		},
		{
			"name": "8、创建评论",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {",
							"    pm.expect(pm.response.code).to.equal(201);",
							"});",
							"",
							"",
							"pm.test(\"Response has required fields\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.all.keys('content', 'id', 'post_id', 'user_id');",
							"});",
							"",
							"",
							"pm.test(\"Content must be a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.content).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"ID, post_id, and user_id must be non-negative integers\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    ",
							"    [responseData.id, responseData.post_id, responseData.user_id].forEach(function(value) {",
							"        pm.expect(value).to.be.a('number').and.to.be.at.least(0, \"Value must be a non-negative integer\");",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTMxMDY2MTIsImlhdCI6MTc1MzAyMDIxMiwidXNlcl9pZCI6MX0.wj56nQNAOTXpgFsDMWfelffrqZs4TJ5TBnEAldwfTs4",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"content\":\"安师大萨达shaksdak凯撒打死你卡德纳斯\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/creatComment/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"creatComment",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "9、获取评论根据ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response content type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Response is an array with exactly one element\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('array').that.has.lengthOf(1);",
							"});",
							"",
							"",
							"pm.test(\"Validate the structure of the comment object\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    pm.expect(responseData).to.be.an('array').that.is.not.empty;",
							"    ",
							"    responseData.forEach(comment => {",
							"        pm.expect(comment).to.be.an('object');",
							"        pm.expect(comment).to.have.all.keys('ID', 'CreatedAt', 'UpdatedAt', 'DeletedAt', 'Content', 'UserID', 'PostID', 'User', 'Post');",
							"",
							"        pm.expect(comment.User).to.be.an('object').that.has.all.keys('ID', 'CreatedAt', 'UpdatedAt', 'DeletedAt', 'Username', 'Password', 'Email', 'Posts');",
							"        pm.expect(comment.Post).to.be.an('object').that.has.all.keys('ID', 'CreatedAt', 'UpdatedAt', 'DeletedAt', 'Title', 'Content', 'UserID', 'User', 'Comments');",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"UserID and PostID are non-negative integers\", function () {",
							"    const responseData = pm.response.json();",
							"",
							"    responseData.forEach(item => {",
							"        pm.expect(item.UserID).to.be.a('number').and.to.be.at.least(0);",
							"        pm.expect(item.PostID).to.be.a('number').and.to.be.at.least(0);",
							"    });",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTMxMDY2MTIsImlhdCI6MTc1MzAyMDIxMiwidXNlcl9pZCI6MX0.wj56nQNAOTXpgFsDMWfelffrqZs4TJ5TBnEAldwfTs4",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/getCommentById/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"getCommentById",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "10、删除评论",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.eql(200);",
							"});",
							"",
							"",
							"pm.test(\"Response should have a message field\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object').that.has.property('message');",
							"});",
							"",
							"",
							"pm.test(\"The message must be a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.message).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3NTMxMDY2MTIsImlhdCI6MTc1MzAyMDIxMiwidXNlcl9pZCI6MX0.wj56nQNAOTXpgFsDMWfelffrqZs4TJ5TBnEAldwfTs4",
						"type": "text"
					}
				],
				"url": {
					"raw": "localhost:8080/deleteCommentById/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"deleteCommentById",
						"1"
					]
				}
			},
			"response": []
		}
	]
}